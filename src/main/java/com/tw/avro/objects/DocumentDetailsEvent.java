/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.tw.avro.objects;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DocumentDetailsEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 635660535022259350L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DocumentDetailsEvent\",\"namespace\":\"com.tw.avro.objects\",\"fields\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"time\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"profile\",\"type\":\"string\"},{\"name\":\"document\",\"type\":{\"type\":\"record\",\"name\":\"DocumentDetails\",\"fields\":[{\"name\":\"document_id\",\"type\":\"string\"},{\"name\":\"document_type\",\"type\":\"string\"},{\"name\":\"issuer_country\",\"type\":\"string\"},{\"name\":\"issue_date\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"expiry_date\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"nationality\",\"type\":\"string\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence key;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence type;
  @Deprecated public long time;
  @Deprecated public java.lang.CharSequence profile;
  @Deprecated public com.tw.avro.objects.DocumentDetails document;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DocumentDetailsEvent() {}

  /**
   * All-args constructor.
   */
  public DocumentDetailsEvent(java.lang.CharSequence key, java.lang.CharSequence name, java.lang.CharSequence type, java.lang.Long time, java.lang.CharSequence profile, com.tw.avro.objects.DocumentDetails document) {
    this.key = key;
    this.name = name;
    this.type = type;
    this.time = time;
    this.profile = profile;
    this.document = document;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return key;
    case 1: return name;
    case 2: return type;
    case 3: return time;
    case 4: return profile;
    case 5: return document;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: key = (java.lang.CharSequence)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: type = (java.lang.CharSequence)value$; break;
    case 3: time = (java.lang.Long)value$; break;
    case 4: profile = (java.lang.CharSequence)value$; break;
    case 5: document = (com.tw.avro.objects.DocumentDetails)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'key' field.
   */
  public java.lang.CharSequence getKey() {
    return key;
  }

  /**
   * Sets the value of the 'key' field.
   * @param value the value to set.
   */
  public void setKey(java.lang.CharSequence value) {
    this.key = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'type' field.
   */
  public java.lang.CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'time' field.
   */
  public java.lang.Long getTime() {
    return time;
  }

  /**
   * Sets the value of the 'time' field.
   * @param value the value to set.
   */
  public void setTime(java.lang.Long value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'profile' field.
   */
  public java.lang.CharSequence getProfile() {
    return profile;
  }

  /**
   * Sets the value of the 'profile' field.
   * @param value the value to set.
   */
  public void setProfile(java.lang.CharSequence value) {
    this.profile = value;
  }

  /**
   * Gets the value of the 'document' field.
   */
  public com.tw.avro.objects.DocumentDetails getDocument() {
    return document;
  }

  /**
   * Sets the value of the 'document' field.
   * @param value the value to set.
   */
  public void setDocument(com.tw.avro.objects.DocumentDetails value) {
    this.document = value;
  }

  /**
   * Creates a new DocumentDetailsEvent RecordBuilder.
   * @return A new DocumentDetailsEvent RecordBuilder
   */
  public static com.tw.avro.objects.DocumentDetailsEvent.Builder newBuilder() {
    return new com.tw.avro.objects.DocumentDetailsEvent.Builder();
  }
  
  /**
   * Creates a new DocumentDetailsEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DocumentDetailsEvent RecordBuilder
   */
  public static com.tw.avro.objects.DocumentDetailsEvent.Builder newBuilder(com.tw.avro.objects.DocumentDetailsEvent.Builder other) {
    return new com.tw.avro.objects.DocumentDetailsEvent.Builder(other);
  }
  
  /**
   * Creates a new DocumentDetailsEvent RecordBuilder by copying an existing DocumentDetailsEvent instance.
   * @param other The existing instance to copy.
   * @return A new DocumentDetailsEvent RecordBuilder
   */
  public static com.tw.avro.objects.DocumentDetailsEvent.Builder newBuilder(com.tw.avro.objects.DocumentDetailsEvent other) {
    return new com.tw.avro.objects.DocumentDetailsEvent.Builder(other);
  }
  
  /**
   * RecordBuilder for DocumentDetailsEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DocumentDetailsEvent>
    implements org.apache.avro.data.RecordBuilder<DocumentDetailsEvent> {

    private java.lang.CharSequence key;
    private java.lang.CharSequence name;
    private java.lang.CharSequence type;
    private long time;
    private java.lang.CharSequence profile;
    private com.tw.avro.objects.DocumentDetails document;
    private com.tw.avro.objects.DocumentDetails.Builder documentBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(com.tw.avro.objects.DocumentDetailsEvent.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.tw.avro.objects.DocumentDetailsEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.key)) {
        this.key = data().deepCopy(fields()[0].schema(), other.key);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.time)) {
        this.time = data().deepCopy(fields()[3].schema(), other.time);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.profile)) {
        this.profile = data().deepCopy(fields()[4].schema(), other.profile);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.document)) {
        this.document = data().deepCopy(fields()[5].schema(), other.document);
        fieldSetFlags()[5] = true;
      }
      if (other.hasDocumentBuilder()) {
        this.documentBuilder = com.tw.avro.objects.DocumentDetails.newBuilder(other.getDocumentBuilder());
      }
    }
    
    /**
     * Creates a Builder by copying an existing DocumentDetailsEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.tw.avro.objects.DocumentDetailsEvent other) {
            super(com.tw.avro.objects.DocumentDetailsEvent.SCHEMA$);
      if (isValidValue(fields()[0], other.key)) {
        this.key = data().deepCopy(fields()[0].schema(), other.key);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.time)) {
        this.time = data().deepCopy(fields()[3].schema(), other.time);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.profile)) {
        this.profile = data().deepCopy(fields()[4].schema(), other.profile);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.document)) {
        this.document = data().deepCopy(fields()[5].schema(), other.document);
        fieldSetFlags()[5] = true;
      }
      this.documentBuilder = null;
    }

    /**
      * Gets the value of the 'key' field.
      * @return The value.
      */
    public java.lang.CharSequence getKey() {
      return key;
    }

    /**
      * Sets the value of the 'key' field.
      * @param value The value of 'key'.
      * @return This builder.
      */
    public com.tw.avro.objects.DocumentDetailsEvent.Builder setKey(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.key = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'key' field has been set.
      * @return True if the 'key' field has been set, false otherwise.
      */
    public boolean hasKey() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'key' field.
      * @return This builder.
      */
    public com.tw.avro.objects.DocumentDetailsEvent.Builder clearKey() {
      key = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.tw.avro.objects.DocumentDetailsEvent.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.tw.avro.objects.DocumentDetailsEvent.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.tw.avro.objects.DocumentDetailsEvent.Builder setType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.tw.avro.objects.DocumentDetailsEvent.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'time' field.
      * @return The value.
      */
    public java.lang.Long getTime() {
      return time;
    }

    /**
      * Sets the value of the 'time' field.
      * @param value The value of 'time'.
      * @return This builder.
      */
    public com.tw.avro.objects.DocumentDetailsEvent.Builder setTime(long value) {
      validate(fields()[3], value);
      this.time = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'time' field has been set.
      * @return True if the 'time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'time' field.
      * @return This builder.
      */
    public com.tw.avro.objects.DocumentDetailsEvent.Builder clearTime() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile' field.
      * @return The value.
      */
    public java.lang.CharSequence getProfile() {
      return profile;
    }

    /**
      * Sets the value of the 'profile' field.
      * @param value The value of 'profile'.
      * @return This builder.
      */
    public com.tw.avro.objects.DocumentDetailsEvent.Builder setProfile(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.profile = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'profile' field has been set.
      * @return True if the 'profile' field has been set, false otherwise.
      */
    public boolean hasProfile() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'profile' field.
      * @return This builder.
      */
    public com.tw.avro.objects.DocumentDetailsEvent.Builder clearProfile() {
      profile = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'document' field.
      * @return The value.
      */
    public com.tw.avro.objects.DocumentDetails getDocument() {
      return document;
    }

    /**
      * Sets the value of the 'document' field.
      * @param value The value of 'document'.
      * @return This builder.
      */
    public com.tw.avro.objects.DocumentDetailsEvent.Builder setDocument(com.tw.avro.objects.DocumentDetails value) {
      validate(fields()[5], value);
      this.documentBuilder = null;
      this.document = value;
      fieldSetFlags()[5] = true;
      return this; 
    }

    /**
      * Checks whether the 'document' field has been set.
      * @return True if the 'document' field has been set, false otherwise.
      */
    public boolean hasDocument() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'document' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.tw.avro.objects.DocumentDetails.Builder getDocumentBuilder() {
      if (documentBuilder == null) {
        if (hasDocument()) {
          setDocumentBuilder(com.tw.avro.objects.DocumentDetails.newBuilder(document));
        } else {
          setDocumentBuilder(com.tw.avro.objects.DocumentDetails.newBuilder());
        }
      }
      return documentBuilder;
    }

    /**
     * Sets the Builder instance for the 'document' field
     * @return This builder.
     */
    public com.tw.avro.objects.DocumentDetailsEvent.Builder setDocumentBuilder(com.tw.avro.objects.DocumentDetails.Builder value) {
      clearDocument();
      documentBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'document' field has an active Builder instance
     * @return True if the 'document' field has an active Builder instance
     */
    public boolean hasDocumentBuilder() {
      return documentBuilder != null;
    }

    /**
      * Clears the value of the 'document' field.
      * @return This builder.
      */
    public com.tw.avro.objects.DocumentDetailsEvent.Builder clearDocument() {
      document = null;
      documentBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public DocumentDetailsEvent build() {
      try {
        DocumentDetailsEvent record = new DocumentDetailsEvent();
        record.key = fieldSetFlags()[0] ? this.key : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.time = fieldSetFlags()[3] ? this.time : (java.lang.Long) defaultValue(fields()[3]);
        record.profile = fieldSetFlags()[4] ? this.profile : (java.lang.CharSequence) defaultValue(fields()[4]);
        if (documentBuilder != null) {
          record.document = this.documentBuilder.build();
        } else {
          record.document = fieldSetFlags()[5] ? this.document : (com.tw.avro.objects.DocumentDetails) defaultValue(fields()[5]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
